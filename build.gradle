plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.diffplug.spotless' version '6.25.0'
}

group = 'com.dpvn'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.1")
}

dependencies {
    implementation('com.dpvn:dpvn-shared:0.0.1-SNAPSHOT')
    implementation 'com.dpvn:dpvn-crm-crud-service:0.0.1-SNAPSHOT'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.session:spring-session-data-redis'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

spotless {
    java {
        target '**/*.java'
        googleJavaFormat("1.22.0")
        importOrder()
    }
}

bootJar {
    if (project.hasProperty('jarName')) {
        archiveBaseName = project.getProperty('jarName')
        archiveVersion = '' // Set version to empty to exclude version from the JAR name
    }
    manifest {
        attributes(
                'Implementation-Title': archiveBaseName,
                'Implementation-Version': archiveVersion
        )
    }
}
